df = pd.read_csv("adult.data.csv")

race_count = pd.Series.value_counts(df["race"])

df_mine = df[df["sex"].str.contains("Female")==False]
aam = df_mine["age"].mean()
average_age_men = round(aam*10)/10

pb = (df['education'].value_counts()['Bachelors']/df['education'].count()) * 100
percentage_bachelors = round(pb*10)/10

df_me = df[df["salary"].str.contains("<=50K")==False] #People who made more than 50K

a = df_me['education'].value_counts()['Bachelors']
b = df_me['education'].value_counts()['Masters']
c = df_me['education'].value_counts()['Doctorate']
high_ed = a + b + c
d = df['education'].value_counts()['Bachelors']
e = df['education'].value_counts()['Masters']
f = df['education'].value_counts()['Doctorate']
high_ed_tot = d + e + f

lower_ed = df_me[df_me["education"].str.contains("Bachelors")==False]
lower_ed = lower_ed[lower_ed["education"].str.contains("Masters")==False]
lower_ed = lower_ed[lower_ed["education"].str.contains("Doctorate")==False] #earning >50K

low_ed_tot = df[df["education"].str.contains("Bachelors")==False]
low_ed_tot = low_ed_tot[low_ed_tot["education"].str.contains("Masters")==False]
low_ed_tot = low_ed_tot[low_ed_tot["education"].str.contains("Doctorate")==False]

her = (high_ed/ high_ed_tot) * 100
higher_education_rich = round(her*10)/10
ler = (lower_ed['education'].count()/low_ed_tot['education'].count()) * 100
lower_education_rich = round(ler*10)/10

min_work_hours = df['hours-per-week'].min()

num_min_workers = len(df_me[df_me['hours-per-week'].map(lambda x: x == min_work_hours)])
num_min_workers_total = len(df[df['hours-per-week'].map(lambda x: x == min_work_hours)])
rp = (num_min_workers/num_min_workers_total) * 100
rich_percentage = round(rp*10)/10

df1 = pd.concat([df['native-country'], df_me['native-country']], axis=1, keys=['df', 'df_me'])
me =  df.groupby('native-country')['native-country'].count()
my =  df_me.groupby('native-country')['native-country'].count()
df1 = pd.concat([me, my], axis=1, keys=['df', 'df_me'])
df1['percentage'] = (df1['df_me']/df1['df'])*100
df2 = df1['percentage'].max()
hec = df1.index[df1['percentage'] == df1['percentage'].max()].tolist()
highest_earning_country = hec[0]
highest_earning_country_percentage = round(df2*10)/10

